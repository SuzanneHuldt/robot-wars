describe KillLibrary do
  describe '#all_patterns' do
    it 'returns an array of each variations of each pattern' do
      expect(subject.all_patterns(1,1)).to eq [
        [
          [[1, 1], [2, 1], [1, 2]],
          [[1, 1], [2, 1], [2, 2]],
          [[1, 1], [0, 2], [1, 2]],
          [[1, 1], [1, 2], [2, 2]]
        ],
        [
          [[1,1],[0, 2], [2, 2], [1,3]]
        ],
        [
          [[1, 1], [0, 2], [2, 2], [0, 3], [2, 3], [1, 4]],
          [[1, 1], [2, 1], [0, 2], [3, 2], [1, 3], [2, 3]]
        ],
        [
          [[1, 1], [1, 2], [1, 3]],
          [[1, 1], [2, 1], [3, 1]]
        ],
        [
          [[1, 1], [2, 1], [0, 2], [3, 2], [0, 3], [3, 3], [1, 4], [2, 4]]
        ],
        [
          [[1, 1], [2, 1], [1, 2], [3, 2], [2, 3]],
          [[1, 1], [2, 1], [0, 2], [2, 2], [1, 3]],
          [[1, 1], [0, 2], [2, 2], [1, 3], [2, 3]],
          [[1, 1], [0, 2], [2, 2], [0, 3], [1, 3]]
        ],
        [
          [[1, 1], [2, 1], [1, 2], [3, 2], [2, 3], [3, 3]],
          [[1, 1], [2, 1], [0, 2], [2, 2], [0, 3], [1, 3]]
        ],
        [
          [[1, 1], [2, 1], [0, 2], [3, 2], [0, 3], [2, 3], [1, 4]],
          [[1, 1], [2, 1], [0, 2], [3, 2], [1, 3], [3, 3], [2, 4]],
          [[1, 1], [0, 2], [2, 2], [-1, 3], [2, 3], [0, 4], [1, 4]],
          [[1, 1], [0, 2], [2, 2], [0, 3], [3, 3], [1, 4], [2, 4]]
        ]
      ]
    end
  end
end

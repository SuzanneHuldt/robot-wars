describe CellChecker do
  before(:each) do
    @field = [
              # 0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17
              ['1', '0', '0', '.', '.', '.', '.', '1', '.', '1', '.', '1', '.', '.', '1', '.', '.', '.'], # 0
              ['.', '.', '1', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], # 1
              ['1', '0', '.', '.', '.', '.', '1', '.', '.', '.', '.', '0', '.', '.', '1', '.', '.', '.'], # 2
              ['1', '0', '.', '1', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], # 3
              ['1', '0', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '1', '.', '.', '.'], # 4
              ['1', '0', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], # 5
              ['1', '0', '.', '.', '0', '.', '.', '1', '1', '.', '.', '1', '.', '.', '.', '.', '.', '.'], # 6
              ['1', '0', '.', '.', '.', '.', '.', '.', '1', '.', '.', '.', '.', '.', '.', '.', '.', '.'], # 7
              ['1', '0', '.', '.', '.', '.', '.', '.', '1', '.', '.', '.', '.', '.', '.', '.', '.', '.'], # 8
              ['1', '0', '.', '.', '1', '.', '.', '.', '.', '1', '.', '.', '.', '.', '0', '.', '.', '.'], # 9
              ['1', '0', '.', '.', '.', '.', '0', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], # 10
              ['1', '0', '.', '.', '.', '.', '.', '.', '.', '.', '.', '1', '.', '.', '.', '.', '.', '.'], # 11
              ['1', '0', '.', '.', '.', '.', '1', '.', '.', '.', '.', '.', '.', '.', '0', '.', '.', '.'], # 12
              ['1', '0', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.'], # 13
              ['1', '0', '.', '0', '.', '.', '1', '.', '1', '.', '.', '1', '.', '.', '.', '.', '.', '.'], # 14
              ['1', '0', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.', '.']# 15
           ]
         end

  describe '#trim_edges' do
    it 'creates an array of valid 4x4 grids' do
      subject.trim_edges(@field)
      expect(subject.grid_coordinates).to eq(["0,0", "1,0", "2,0", "3,0", "4,0", "5,0", "6,0", "7,0", "8,0",
        "9,0", "10,0", "11,0", "12,0", "13,0", "14,0", "0,1", "1,1", "2,1", "3,1", "4,1", "5,1", "6,1", "7,1", "8,1",
        "9,1", "10,1", "11,1", "12,1", "13,1", "14,1", "0,2", "1,2", "2,2", "3,2", "4,2", "5,2", "6,2", "7,2", "8,2",
        "9,2", "10,2", "11,2", "12,2", "13,2", "14,2", "0,3", "1,3", "2,3", "3,3", "4,3", "5,3", "6,3", "7,3", "8,3",
        "9,3", "10,3", "11,3", "12,3", "13,3", "14,3", "0,4", "1,4", "2,4", "3,4", "4,4", "5,4", "6,4", "7,4", "8,4",
        "9,4", "10,4", "11,4", "12,4", "13,4", "14,4", "0,5", "1,5", "2,5", "3,5", "4,5", "5,5", "6,5", "7,5", "8,5",
        "9,5", "10,5", "11,5", "12,5", "13,5", "14,5", "0,6", "1,6", "2,6", "3,6", "4,6", "5,6", "6,6", "7,6", "8,6",
        "9,6", "10,6", "11,6", "12,6", "13,6", "14,6", "0,7", "1,7", "2,7", "3,7", "4,7", "5,7", "6,7", "7,7", "8,7",
        "9,7", "10,7", "11,7", "12,7", "13,7", "14,7", "0,8", "1,8", "2,8", "3,8", "4,8", "5,8", "6,8", "7,8", "8,8",
        "9,8", "10,8", "11,8", "12,8", "13,8", "14,8", "0,9", "1,9", "2,9", "3,9", "4,9", "5,9", "6,9", "7,9", "8,9",
        "9,9", "10,9", "11,9", "12,9", "13,9", "14,9", "0,10", "1,10", "2,10", "3,10", "4,10", "5,10", "6,10", "7,10",
        "8,10", "9,10", "10,10", "11,10", "12,10", "13,10",
        "14,10", "0,11", "1,11", "2,11", "3,11", "4,11", "5,11", "6,11", "7,11", "8,11", "9,11", "10,11", "11,11",
        "12,11", "13,11", "14,11", "0,12", "1,12", "2,12", "3,12", "4,12", "5,12", "6,12", "7,12", "8,12", "9,12",
        "10,12", "11,12", "12,12", "13,12", "14,12"]
      )
    end
  end

  describe "#blank row" do
    it "returns true if a row of length 4 is empty" do
      field = [['.','.','.','.']]
      expect(subject.blank_row(field,0,0)).to be(true)
    end
    it "returns false if a row of length 4 is not empty" do
      field = [['.','1','.','.']]
      expect(subject.blank_row(field,0,0)).to be(false)
    end
  end

  describe "#blank 4x4" do
    it "returns true for a blank 4x4 grid" do
      field_1 = [['.','.','.','.'],['.','.','.','.'],['.','.','.','.'],['.','.','.','.']]
      expect(subject.blank_4x4?(field_1,0,0)).to be(true)
    end
    it "returns false for a 4x4 grid that is not blank" do
      field = [['.','.','1','.'],['.','.','.','.'],['.','.','.','.'],['.','0','.','.']]
      expect(subject.blank_4x4?(field,0,0)).to be(false)
    end
  end

  describe '#identify_blank_grid_of_4' do
    xit 'identifys the blank 4x4 grids' do
      subject.trim_edges(@field)
      expect(subject.identify_blank_grid_of_4(@field)).to eq([
        "7,1", "7,2", "12,5", "13,5", "14,5", "10,7", "2,10", "7,10"
        ])
    end
  end

  describe '#remove_blank_grid_of_4' do
    it 'removes blank 4x4 grids from grid_coordinates' do
      subject.trim_edges(@field)
      subject.identify_blank_grid_of_4(@field)
      subject.remove_blank_grid_of_4
      expect(subject.grid_coordinates).to eq(["0,0", "1,0", "2,0", "3,0", "4,0",
         "5,0", "6,0", "7,0", "8,0", "9,0", "10,0", "11,0", "12,0", "13,0", "14,0",
          "0,1", "1,1", "2,1", "3,1", "4,1", "5,1", "6,1", "8,1", "9,1", "10,1", "11,1",
           "12,1", "13,1", "14,1", "0,2", "1,2", "2,2", "3,2", "4,2", "5,2", "6,2", "8,2",
            "9,2", "10,2", "11,2", "12,2", "13,2", "14,2", "0,3", "1,3", "2,3", "3,3", "4,3",
             "5,3", "6,3", "7,3", "8,3", "9,3", "10,3", "11,3", "12,3", "13,3", "14,3", "0,4",
              "1,4", "2,4", "3,4", "4,4", "5,4", "6,4", "7,4", "8,4", "9,4", "10,4", "11,4", "12,4",
               "13,4", "14,4", "0,5", "1,5", "2,5", "3,5", "4,5", "5,5", "6,5", "7,5", "8,5", "9,5",
                "10,5", "11,5", "0,6", "1,6", "2,6", "3,6", "4,6", "5,6", "6,6", "7,6", "8,6", "9,6",
                 "10,6", "11,6", "12,6", "13,6", "14,6", "0,7", "1,7", "2,7", "3,7", "4,7", "5,7", "6,7",
                  "7,7", "8,7", "9,7", "11,7", "12,7", "13,7", "14,7", "0,8", "1,8", "2,8", "3,8", "4,8",
                   "5,8", "6,8", "7,8", "8,8", "9,8", "10,8", "11,8", "12,8", "13,8", "14,8", "0,9", "1,9",
                    "2,9", "3,9", "4,9", "5,9", "6,9", "7,9", "8,9", "9,9", "10,9", "11,9", "12,9", "13,9",
                    "14,9", "0,10", "1,10", "3,10", "4,10", "5,10", "6,10", "8,10", "9,10", "10,10", "11,10",
                     "12,10", "13,10", "14,10", "0,11",
                 "1,11", "2,11", "3,11", "4,11", "5,11", "6,11", "7,11", "8,11", "9,11", "10,11", "11,11",
                 "12,11", "13,11", "14,11", "0,12", "1,12", "2,12", "3,12", "4,12", "5,12", "6,12", "7,12",
                 "8,12", "9,12", "10,12", "11,12", "12,12", "13,12", "14,12"]
        )
    end
  end

  describe '#get_valid_coordinates' do
    it 'returns an array of valid coordinates' do
      expect(subject.get_valid_coordinates(@field)).to eq([[0,0], [1,0], [2,0], [3,0], [4,0],
         [5,0], [6,0], [7,0], [8,0], [9,0], [10,0], [11,0], [12,0], [13,0], [14,0],
          [0,1], [1,1], [2,1], [3,1], [4,1], [5,1], [6,1], [8,1], [9,1], [10,1], [11,1],
           [12,1], [13,1], [14,1], [0,2], [1,2], [2,2], [3,2], [4,2], [5,2], [6,2], [8,2],
            [9,2], [10,2], [11,2], [12,2], [13,2], [14,2], [0,3], [1,3], [2,3], [3,3], [4,3],
             [5,3], [6,3], [7,3], [8,3], [9,3], [10,3], [11,3], [12,3], [13,3], [14,3], [0,4],
              [1,4], [2,4], [3,4], [4,4], [5,4], [6,4], [7,4], [8,4], [9,4], [10,4], [11,4], [12,4],
               [13,4], [14,4], [0,5], [1,5], [2,5], [3,5], [4,5], [5,5], [6,5], [7,5], [8,5], [9,5],
                [10,5], [11,5], [0,6], [1,6], [2,6], [3,6], [4,6], [5,6], [6,6], [7,6], [8,6], [9,6],
                 [10,6], [11,6], [12,6], [13,6], [14,6], [0,7], [1,7], [2,7], [3,7], [4,7], [5,7], [6,7],
                  [7,7], [8,7], [9,7], [11,7], [12,7], [13,7], [14,7], [0,8], [1,8], [2,8], [3,8], [4,8],
                   [5,8], [6,8], [7,8], [8,8], [9,8], [10,8], [11,8], [12,8], [13,8], [14,8], [0,9], [1,9],
                    [2,9], [3,9], [4,9], [5,9], [6,9], [7,9], [8,9], [9,9], [10,9], [11,9], [12,9], [13,9],
                    [14,9], [0,10], [1,10], [3,10], [4,10], [5,10], [6,10], [8,10], [9,10], [10,10], [11,10],
                     [12,10], [13,10], [14,10], [0,11],
                 [1,11], [2,11], [3,11], [4,11], [5,11], [6,11], [7,11], [8,11], [9,11], [10,11], [11,11],
                 [12,11], [13,11], [14,11], [0,12], [1,12], [2,12], [3,12], [4,12], [5,12], [6,12], [7,12],
                 [8,12], [9,12], [10,12], [11,12], [12,12], [13,12], [14,12]] )
    end
  end
end
